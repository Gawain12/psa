<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.login.dao.UserDao">
    <resultMap id="UserResult" type="User">
        <id column="uid" property="uid" />
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="firstlogin" column="firstlogin"/>
        <result property="percode" column="percode"/>
    </resultMap>

    <select id="getPasswd" parameterType="String" resultType="String">
        SELECT password
        FROM user
        WHERE username = #{username}
    </select>

    <select id="getUserEntity" parameterType="String" resultType="User">
        SELECT uid, username, password, firstlogin, name, percode
        FROM user
        WHERE username = #{username}
    </select>

    <update id="setUserPasswd" parameterType="map">
        UPDATE user
        set password = #{password}
        WHERE uid = #{uid}
    </update>

    <update id="setFirstLogin" parameterType="map">
        UPDATE user
        SET firstlogin = #{isfirst}
        WHERE uid = #{uid}
    </update>
    <select id="findByPaging" parameterType="com.system.util.PagingVO" resultType="User">
        SELECT uid, username, password, firstlogin, name, percode
        FROM user
        WHERE percode = 'user' order by username asc
         <if test="toPageNo!=null and pageSize!=null">
        limit #{toPageNo},#{pageSize}
         </if>
    </select>
    <select id="getCount" parameterType="com.system.login.dao.UserDao" resultType="java.lang.Integer" >
        select count(*)
        FROM user
        WHERE percode = 'user'
    </select>
    <select id="isFirstLogin" parameterType="int" resultType="Boolean">
        SELECT firstlogin
        FROM user
        WHERE uid = #{uid}
    </select>

    <select id="getPasswdById" parameterType="int" resultType="String">
        SELECT password
        FROM user
        WHERE uid = #{uid}
    </select>

    <select id="getUserEntityByID" resultType="User" parameterType="int">
        SELECT uid, username, password, firstlogin, name, percode
        FROM user
        WHERE uid = #{uid} order by username asc
    </select>
    <select id="getUserEntityByHid" resultType="User" parameterType="int">
        SELECT uid, username, password, firstlogin, name, percode
        FROM user
        WHERE hid = #{hid}
    </select>

    <select id="getUserList" resultType="User">
        SELECT uid, username, password, firstlogin, name, percode
        FROM user
        WHERE percode = 'user' order by username asc
    </select>

    <insert id="addStudent" parameterType="User">
        INSERT INTO user(username, password, firstlogin, name, percode)
        VALUES  (#{username}, #{password}, #{firstlogin},#{name},#{percode})
    </insert>
    <delete id="delStudentByUID" parameterType="int">
        DELETE
        FROM user
        WHERE uid = #{uid}
    </delete>
    <update id="upStudent" parameterType="user">
        UPDATE user
        SET username  = #{username}, name = #{name},  password = #{password}
        WHERE uid = #{uid}
    </update>
</mapper>
